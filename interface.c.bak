/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_window1 (void)
{
  GtkWidget *window1;
  GtkWidget *fixed1;
  GtkWidget *entry_login;
  GtkWidget *Entry_password;
  GtkWidget *label_login;
  GtkWidget *label_password;
  GtkWidget *button_ok;
  GtkWidget *label_verif;

  window1 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window1), _("window1"));

  fixed1 = gtk_fixed_new ();
  gtk_widget_show (fixed1);
  gtk_container_add (GTK_CONTAINER (window1), fixed1);

  entry_login = gtk_entry_new ();
  gtk_widget_show (entry_login);
  gtk_fixed_put (GTK_FIXED (fixed1), entry_login, 184, 32);
  gtk_widget_set_size_request (entry_login, 160, 27);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry_login), 8226);

  Entry_password = gtk_entry_new ();
  gtk_widget_show (Entry_password);
  gtk_fixed_put (GTK_FIXED (fixed1), Entry_password, 192, 88);
  gtk_widget_set_size_request (Entry_password, 160, 27);
  gtk_entry_set_visibility (GTK_ENTRY (Entry_password), FALSE);
  gtk_entry_set_invisible_char (GTK_ENTRY (Entry_password), 8226);

  label_login = gtk_label_new (_("login"));
  gtk_widget_show (label_login);
  gtk_fixed_put (GTK_FIXED (fixed1), label_login, 104, 40);
  gtk_widget_set_size_request (label_login, 64, 16);

  label_password = gtk_label_new (_("password"));
  gtk_widget_show (label_password);
  gtk_fixed_put (GTK_FIXED (fixed1), label_password, 80, 96);
  gtk_widget_set_size_request (label_password, 96, 16);

  button_ok = gtk_button_new_with_mnemonic (_("ok?"));
  gtk_widget_show (button_ok);
  gtk_fixed_put (GTK_FIXED (fixed1), button_ok, 200, 200);
  gtk_widget_set_size_request (button_ok, 66, 29);

  label_verif = gtk_label_new ("");
  gtk_widget_show (label_verif);
  gtk_fixed_put (GTK_FIXED (fixed1), label_verif, 192, 144);
  gtk_widget_set_size_request (label_verif, 152, 40);

  g_signal_connect ((gpointer) button_ok, "clicked",
                    G_CALLBACK (on_button_ok_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window1, window1, "window1");
  GLADE_HOOKUP_OBJECT (window1, fixed1, "fixed1");
  GLADE_HOOKUP_OBJECT (window1, entry_login, "entry_login");
  GLADE_HOOKUP_OBJECT (window1, Entry_password, "Entry_password");
  GLADE_HOOKUP_OBJECT (window1, label_login, "label_login");
  GLADE_HOOKUP_OBJECT (window1, label_password, "label_password");
  GLADE_HOOKUP_OBJECT (window1, button_ok, "button_ok");
  GLADE_HOOKUP_OBJECT (window1, label_verif, "label_verif");

  return window1;
}

GtkWidget*
create_menu_coach (void)
{
  GtkWidget *menu_coach;
  GtkWidget *fixed2;
  GtkWidget *button_urgence;
  GtkWidget *button_adherent;
  GtkWidget *button3;

  menu_coach = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (menu_coach), _("window2"));

  fixed2 = gtk_fixed_new ();
  gtk_widget_show (fixed2);
  gtk_container_add (GTK_CONTAINER (menu_coach), fixed2);

  button_urgence = gtk_button_new_with_mnemonic (_("cas d'urgence"));
  gtk_widget_show (button_urgence);
  gtk_fixed_put (GTK_FIXED (fixed2), button_urgence, 40, 320);
  gtk_widget_set_size_request (button_urgence, 480, 45);

  button_adherent = gtk_button_new_with_mnemonic (_("les maladies et l'etat physique du menbre"));
  gtk_widget_show (button_adherent);
  gtk_fixed_put (GTK_FIXED (fixed2), button_adherent, 32, 208);
  gtk_widget_set_size_request (button_adherent, 488, 77);

  button3 = gtk_button_new_with_mnemonic (_("afficher votre seance pendant cette semainn"));
  gtk_widget_show (button3);
  gtk_fixed_put (GTK_FIXED (fixed2), button3, 32, 48);
  gtk_widget_set_size_request (button3, 488, 120);

  g_signal_connect ((gpointer) button_urgence, "clicked",
                    G_CALLBACK (on_button_urgence_clicked),
                    NULL);
  g_signal_connect ((gpointer) button_adherent, "clicked",
                    G_CALLBACK (on_button_adherent_clicked),
                    NULL);
  g_signal_connect ((gpointer) button3, "clicked",
                    G_CALLBACK (on_button3_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (menu_coach, menu_coach, "menu_coach");
  GLADE_HOOKUP_OBJECT (menu_coach, fixed2, "fixed2");
  GLADE_HOOKUP_OBJECT (menu_coach, button_urgence, "button_urgence");
  GLADE_HOOKUP_OBJECT (menu_coach, button_adherent, "button_adherent");
  GLADE_HOOKUP_OBJECT (menu_coach, button3, "button3");

  return menu_coach;
}

GtkWidget*
create_window2 (void)
{
  GtkWidget *window2;
  GtkWidget *fixed3;
  GtkWidget *scrolledwindow1;
  GtkWidget *treeview1;
  GtkWidget *button_w2_vers_menu;
  GtkWidget *button1;

  window2 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window2), _("window2"));

  fixed3 = gtk_fixed_new ();
  gtk_widget_show (fixed3);
  gtk_container_add (GTK_CONTAINER (window2), fixed3);

  scrolledwindow1 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow1);
  gtk_fixed_put (GTK_FIXED (fixed3), scrolledwindow1, 168, 104);
  gtk_widget_set_size_request (scrolledwindow1, 300, 300);

  treeview1 = gtk_tree_view_new ();
  gtk_widget_show (treeview1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow1), treeview1);

  button_w2_vers_menu = gtk_button_new_with_mnemonic (_("return"));
  gtk_widget_show (button_w2_vers_menu);
  gtk_fixed_put (GTK_FIXED (fixed3), button_w2_vers_menu, 64, 344);
  gtk_widget_set_size_request (button_w2_vers_menu, 66, 29);

  button1 = gtk_button_new_with_mnemonic (_("ajouter"));
  gtk_widget_show (button1);
  gtk_fixed_put (GTK_FIXED (fixed3), button1, 32, 208);
  gtk_widget_set_size_request (button1, 96, 48);

  g_signal_connect ((gpointer) treeview1, "row_activated",
                    G_CALLBACK (on_treeview1_row_activated),
                    NULL);
  g_signal_connect ((gpointer) button_w2_vers_menu, "clicked",
                    G_CALLBACK (on_button_w2_vers_menu_clicked),
                    NULL);
  g_signal_connect ((gpointer) button1, "clicked",
                    G_CALLBACK (on_button1_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window2, window2, "window2");
  GLADE_HOOKUP_OBJECT (window2, fixed3, "fixed3");
  GLADE_HOOKUP_OBJECT (window2, scrolledwindow1, "scrolledwindow1");
  GLADE_HOOKUP_OBJECT (window2, treeview1, "treeview1");
  GLADE_HOOKUP_OBJECT (window2, button_w2_vers_menu, "button_w2_vers_menu");
  GLADE_HOOKUP_OBJECT (window2, button1, "button1");

  gtk_widget_grab_focus (button1);
  return window2;
}

GtkWidget*
create_window_ajout (void)
{
  GtkWidget *window_ajout;
  GtkWidget *fixed4;
  GtkWidget *label_date;
  GtkWidget *button_return3;
  GtkObject *spinbutton_cjour_adj;
  GtkWidget *spinbutton_cjour;
  GtkObject *spinbutton_cmois_adj;
  GtkWidget *spinbutton_cmois;
  GtkObject *spinbutton_canne_adj;
  GtkWidget *spinbutton_canne;
  GtkWidget *button_ajouter2;
  GtkWidget *label_type;
  GtkWidget *label_seance;
  GtkWidget *combobox_periode;
  GtkWidget *combobox_type;

  window_ajout = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window_ajout), _("window3"));

  fixed4 = gtk_fixed_new ();
  gtk_widget_show (fixed4);
  gtk_container_add (GTK_CONTAINER (window_ajout), fixed4);

  label_date = gtk_label_new (_("date"));
  gtk_widget_show (label_date);
  gtk_fixed_put (GTK_FIXED (fixed4), label_date, 88, 136);
  gtk_widget_set_size_request (label_date, 41, 17);

  button_return3 = gtk_button_new_with_mnemonic (_("return"));
  gtk_widget_show (button_return3);
  gtk_fixed_put (GTK_FIXED (fixed4), button_return3, 128, 272);
  gtk_widget_set_size_request (button_return3, 66, 29);

  spinbutton_cjour_adj = gtk_adjustment_new (1, 1, 30, 1, 10, 10);
  spinbutton_cjour = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton_cjour_adj), 1, 0);
  gtk_widget_show (spinbutton_cjour);
  gtk_fixed_put (GTK_FIXED (fixed4), spinbutton_cjour, 160, 128);
  gtk_widget_set_size_request (spinbutton_cjour, 60, 27);

  spinbutton_cmois_adj = gtk_adjustment_new (1, 1, 12, 1, 10, 10);
  spinbutton_cmois = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton_cmois_adj), 1, 0);
  gtk_widget_show (spinbutton_cmois);
  gtk_fixed_put (GTK_FIXED (fixed4), spinbutton_cmois, 240, 128);
  gtk_widget_set_size_request (spinbutton_cmois, 60, 27);

  spinbutton_canne_adj = gtk_adjustment_new (1, 2018, 2025, 1, 10, 10);
  spinbutton_canne = gtk_spin_button_new (GTK_ADJUSTMENT (spinbutton_canne_adj), 1, 0);
  gtk_widget_show (spinbutton_canne);
  gtk_fixed_put (GTK_FIXED (fixed4), spinbutton_canne, 320, 128);
  gtk_widget_set_size_request (spinbutton_canne, 60, 27);

  button_ajouter2 = gtk_button_new_with_mnemonic (_("ajouter"));
  gtk_widget_show (button_ajouter2);
  gtk_fixed_put (GTK_FIXED (fixed4), button_ajouter2, 256, 272);
  gtk_widget_set_size_request (button_ajouter2, 66, 29);

  label_type = gtk_label_new (_("type"));
  gtk_widget_show (label_type);
  gtk_fixed_put (GTK_FIXED (fixed4), label_type, 104, 208);
  gtk_widget_set_size_request (label_type, 41, 17);

  label_seance = gtk_label_new (_("seance"));
  gtk_widget_show (label_seance);
  gtk_fixed_put (GTK_FIXED (fixed4), label_seance, 80, 56);
  gtk_widget_set_size_request (label_seance, 96, 16);

  combobox_periode = gtk_combo_box_new_text ();
  gtk_widget_show (combobox_periode);
  gtk_fixed_put (GTK_FIXED (fixed4), combobox_periode, 168, 48);
  gtk_widget_set_size_request (combobox_periode, 227, 29);
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_periode), _("8:00_vers_10:00"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_periode), _("10:00_vers_12:00"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_periode), _("14:00_vers_17:00"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_periode), _("17:00_vers_19:00"));

  combobox_type = gtk_combo_box_new_text ();
  gtk_widget_show (combobox_type);
  gtk_fixed_put (GTK_FIXED (fixed4), combobox_type, 157, 203);
  gtk_widget_set_size_request (combobox_type, 200, 31);
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_type), _("gymnastique "));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_type), _("musculation"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_type), _("fitnesse"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_type), _("boxe"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox_type), _("dance"));

  g_signal_connect ((gpointer) button_return3, "clicked",
                    G_CALLBACK (on_button_return3_clicked),
                    NULL);
  g_signal_connect ((gpointer) button_ajouter2, "clicked",
                    G_CALLBACK (on_button_ajouter2_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window_ajout, window_ajout, "window_ajout");
  GLADE_HOOKUP_OBJECT (window_ajout, fixed4, "fixed4");
  GLADE_HOOKUP_OBJECT (window_ajout, label_date, "label_date");
  GLADE_HOOKUP_OBJECT (window_ajout, button_return3, "button_return3");
  GLADE_HOOKUP_OBJECT (window_ajout, spinbutton_cjour, "spinbutton_cjour");
  GLADE_HOOKUP_OBJECT (window_ajout, spinbutton_cmois, "spinbutton_cmois");
  GLADE_HOOKUP_OBJECT (window_ajout, spinbutton_canne, "spinbutton_canne");
  GLADE_HOOKUP_OBJECT (window_ajout, button_ajouter2, "button_ajouter2");
  GLADE_HOOKUP_OBJECT (window_ajout, label_type, "label_type");
  GLADE_HOOKUP_OBJECT (window_ajout, label_seance, "label_seance");
  GLADE_HOOKUP_OBJECT (window_ajout, combobox_periode, "combobox_periode");
  GLADE_HOOKUP_OBJECT (window_ajout, combobox_type, "combobox_type");

  return window_ajout;
}

GtkWidget*
create_window_adherent (void)
{
  GtkWidget *window_adherent;
  GtkWidget *fixed5;
  GtkWidget *treeview2;
  GtkWidget *button_retour1;

  window_adherent = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window_adherent), _("votre adherent"));

  fixed5 = gtk_fixed_new ();
  gtk_widget_show (fixed5);
  gtk_container_add (GTK_CONTAINER (window_adherent), fixed5);

  treeview2 = gtk_tree_view_new ();
  gtk_widget_show (treeview2);
  gtk_fixed_put (GTK_FIXED (fixed5), treeview2, 104, 80);
  gtk_widget_set_size_request (treeview2, 856, 344);

  button_retour1 = gtk_button_new_with_mnemonic (_("return"));
  gtk_widget_show (button_retour1);
  gtk_fixed_put (GTK_FIXED (fixed5), button_retour1, 520, 504);
  gtk_widget_set_size_request (button_retour1, 120, 40);

  g_signal_connect ((gpointer) button_retour1, "clicked",
                    G_CALLBACK (on_button_retour1_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window_adherent, window_adherent, "window_adherent");
  GLADE_HOOKUP_OBJECT (window_adherent, fixed5, "fixed5");
  GLADE_HOOKUP_OBJECT (window_adherent, treeview2, "treeview2");
  GLADE_HOOKUP_OBJECT (window_adherent, button_retour1, "button_retour1");

  return window_adherent;
}

GtkWidget*
create_window_urgence (void)
{
  GtkWidget *window_urgence;
  GtkWidget *fixed6;
  GtkWidget *button_return2;
  GtkWidget *label1;
  GtkWidget *entry_cas_urgence;
  GtkWidget *button_cas_urgence;
  GtkWidget *textview1;

  window_urgence = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window_urgence), _("window4"));

  fixed6 = gtk_fixed_new ();
  gtk_widget_show (fixed6);
  gtk_container_add (GTK_CONTAINER (window_urgence), fixed6);

  button_return2 = gtk_button_new_with_mnemonic (_("return"));
  gtk_widget_show (button_return2);
  gtk_fixed_put (GTK_FIXED (fixed6), button_return2, 32, 352);
  gtk_widget_set_size_request (button_return2, 66, 29);

  label1 = gtk_label_new (_("what "));
  gtk_widget_show (label1);
  gtk_fixed_put (GTK_FIXED (fixed6), label1, 80, 96);
  gtk_widget_set_size_request (label1, 80, 40);

  entry_cas_urgence = gtk_entry_new ();
  gtk_widget_show (entry_cas_urgence);
  gtk_fixed_put (GTK_FIXED (fixed6), entry_cas_urgence, 168, 104);
  gtk_widget_set_size_request (entry_cas_urgence, 264, 40);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry_cas_urgence), 8226);

  button_cas_urgence = gtk_button_new_with_mnemonic (_("valider"));
  gtk_widget_show (button_cas_urgence);
  gtk_fixed_put (GTK_FIXED (fixed6), button_cas_urgence, 384, 344);
  gtk_widget_set_size_request (button_cas_urgence, 66, 29);

  textview1 = gtk_text_view_new ();
  gtk_widget_show (textview1);
  gtk_fixed_put (GTK_FIXED (fixed6), textview1, 232, 192);
  gtk_widget_set_size_request (textview1, 128, 104);

  g_signal_connect ((gpointer) button_return2, "clicked",
                    G_CALLBACK (on_button_return2_clicked),
                    NULL);
  g_signal_connect ((gpointer) button_cas_urgence, "clicked",
                    G_CALLBACK (on_button_cas_urgence_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window_urgence, window_urgence, "window_urgence");
  GLADE_HOOKUP_OBJECT (window_urgence, fixed6, "fixed6");
  GLADE_HOOKUP_OBJECT (window_urgence, button_return2, "button_return2");
  GLADE_HOOKUP_OBJECT (window_urgence, label1, "label1");
  GLADE_HOOKUP_OBJECT (window_urgence, entry_cas_urgence, "entry_cas_urgence");
  GLADE_HOOKUP_OBJECT (window_urgence, button_cas_urgence, "button_cas_urgence");
  GLADE_HOOKUP_OBJECT (window_urgence, textview1, "textview1");

  return window_urgence;
}

GtkWidget*
create_window3 (void)
{
  GtkWidget *window3;
  GtkWidget *fixed7;
  GtkWidget *fixed8;
  GtkWidget *label_seance0;
  GtkWidget *label_date0;
  GtkWidget *label_type;
  GtkWidget *entry_seance;
  GtkWidget *entry_date;
  GtkWidget *entry_type;
  GtkWidget *button_return_w3_vers_wa;
  GtkWidget *button5;
  GtkWidget *button_supprimer;

  window3 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_window_set_title (GTK_WINDOW (window3), _("window3"));

  fixed7 = gtk_fixed_new ();
  gtk_widget_show (fixed7);
  gtk_container_add (GTK_CONTAINER (window3), fixed7);

  fixed8 = gtk_fixed_new ();
  gtk_widget_show (fixed8);
  gtk_fixed_put (GTK_FIXED (fixed7), fixed8, 344, 88);
  gtk_widget_set_size_request (fixed8, 50, 50);

  label_seance0 = gtk_label_new (_("seance"));
  gtk_widget_show (label_seance0);
  gtk_fixed_put (GTK_FIXED (fixed7), label_seance0, 72, 48);
  gtk_widget_set_size_request (label_seance0, 80, 16);

  label_date0 = gtk_label_new (_("date"));
  gtk_widget_show (label_date0);
  gtk_fixed_put (GTK_FIXED (fixed7), label_date0, 96, 88);
  gtk_widget_set_size_request (label_date0, 41, 17);

  label_type = gtk_label_new (_("type"));
  gtk_widget_show (label_type);
  gtk_fixed_put (GTK_FIXED (fixed7), label_type, 104, 144);
  gtk_widget_set_size_request (label_type, 41, 17);

  entry_seance = gtk_entry_new ();
  gtk_widget_show (entry_seance);
  gtk_fixed_put (GTK_FIXED (fixed7), entry_seance, 240, 48);
  gtk_widget_set_size_request (entry_seance, 160, 27);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry_seance), 8226);

  entry_date = gtk_entry_new ();
  gtk_widget_show (entry_date);
  gtk_fixed_put (GTK_FIXED (fixed7), entry_date, 248, 96);
  gtk_widget_set_size_request (entry_date, 160, 27);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry_date), 8226);

  entry_type = gtk_entry_new ();
  gtk_widget_show (entry_type);
  gtk_fixed_put (GTK_FIXED (fixed7), entry_type, 240, 144);
  gtk_widget_set_size_request (entry_type, 160, 27);
  gtk_entry_set_invisible_char (GTK_ENTRY (entry_type), 8226);

  button_return_w3_vers_wa = gtk_button_new_with_mnemonic (_("return"));
  gtk_widget_show (button_return_w3_vers_wa);
  gtk_fixed_put (GTK_FIXED (fixed7), button_return_w3_vers_wa, 88, 208);
  gtk_widget_set_size_request (button_return_w3_vers_wa, 66, 29);

  button5 = gtk_button_new_with_mnemonic (_("modifier"));
  gtk_widget_show (button5);
  gtk_fixed_put (GTK_FIXED (fixed7), button5, 184, 208);
  gtk_widget_set_size_request (button5, 90, 29);

  button_supprimer = gtk_button_new_with_mnemonic (_("supprimer"));
  gtk_widget_show (button_supprimer);
  gtk_fixed_put (GTK_FIXED (fixed7), button_supprimer, 296, 208);
  gtk_widget_set_size_request (button_supprimer, 82, 29);

  g_signal_connect ((gpointer) button_return_w3_vers_wa, "clicked",
                    G_CALLBACK (on_button_return_w3_vers_wa_clicked),
                    NULL);
  g_signal_connect ((gpointer) button5, "clicked",
                    G_CALLBACK (on_button5_clicked),
                    NULL);
  g_signal_connect ((gpointer) button_supprimer, "clicked",
                    G_CALLBACK (on_button_supprimer_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window3, window3, "window3");
  GLADE_HOOKUP_OBJECT (window3, fixed7, "fixed7");
  GLADE_HOOKUP_OBJECT (window3, fixed8, "fixed8");
  GLADE_HOOKUP_OBJECT (window3, label_seance0, "label_seance0");
  GLADE_HOOKUP_OBJECT (window3, label_date0, "label_date0");
  GLADE_HOOKUP_OBJECT (window3, label_type, "label_type");
  GLADE_HOOKUP_OBJECT (window3, entry_seance, "entry_seance");
  GLADE_HOOKUP_OBJECT (window3, entry_date, "entry_date");
  GLADE_HOOKUP_OBJECT (window3, entry_type, "entry_type");
  GLADE_HOOKUP_OBJECT (window3, button_return_w3_vers_wa, "button_return_w3_vers_wa");
  GLADE_HOOKUP_OBJECT (window3, button5, "button5");
  GLADE_HOOKUP_OBJECT (window3, button_supprimer, "button_supprimer");

  return window3;
}

